# documentation: https://github.com/metatool-ai/metamcp
# slogan: MCP Aggregator, Orchestrator, Middleware, Gateway in one app
# tags: mcp, ai, sse
# category: mcp
# logo: svgs/metamcp.png
# port: 12008

services:
  app:
    container_name: metamcp
    image: 'ghcr.io/metatool-ai/metamcp:2.4'
    environment:
      - SERVICE_URL_METAMCP_12008
      - POSTGRES_HOST=${POSTGRES_HOST:-postgres}
      - POSTGRES_PORT=${POSTGRES_PORT:-5432}
      - POSTGRES_USER=${SERVICE_USER_DB}
      - POSTGRES_PASSWORD=${SERVICE_PASSWORD_POSTGRES}
      - POSTGRES_DB=${POSTGRES_DB:-metamcp_db}
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}'
      - APP_URL=$SERVICE_URL_METAMCP
      - NEXT_PUBLIC_APP_URL=${APP_URL}
      - BETTER_AUTH_SECRET=$SERVICE_PASSWORD_AUTH
      - TRANSFORM_LOCALHOST_TO_DOCKER_INTERNAL=${TRANSFORM_LOCALHOST_TO_DOCKER_INTERNAL:?true}
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test:
        - CMD
        - curl
        - '-f'
        - 'http://localhost:12008/health'
      interval: 5s
      timeout: 20s
      retries: 10
  postgres:
    image: 'postgres:16-alpine'
    container_name: metamcp-DB
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-postgres}
      - POSTGRES_PASSWORD=${SERVICE_PASSWORD_POSTGRES}
      - POSTGRES_USER=${SERVICE_USER_POSTGRES}
      - POSTGRES_PORT=${POSTGRES_PORT:-5432}
    volumes:
      - 'postgres_data:/var/lib/postgresql/data'
    healthcheck:
      test:
        - CMD-SHELL
        - 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}'
      interval: 5s
      timeout: 20s
      retries: 10
